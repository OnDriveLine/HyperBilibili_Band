<import name="switch-bar" src="../../components/SwitchBar/SwitchBar.ux"></import>

<template>
  <div class="page">
    <switch-bar title="settings.title"></switch-bar>
    <div class="setbase" style="margin-top: 45px" onclick="ClickCountSet({{countset_name[0]}})">
      <text class="setext_small">{{ $t("settings.videoPushRelevance") }}</text>
      <text class="countset_num">{{ fresh_type }}</text>
    </div>
    <div class="setbase" onclick="ClickCountSet({{countset_name[1]}})">
      <text class="setext_small">{{ $t("settings.videoPushCount") }}</text>
      <text class="countset_num">{{ home_vid_count }}</text>
    </div>
    <div class="setbase" onclick="SwitchSet({{switchset_name[0]}})">
      <text class="setext_small">{{ $t("settings.enableFullAnimation") }}</text>
      <text class="countset_num">{{ enableFullAnimation ? "开" : "关" }}</text>
    </div>
    <div class="setbase" @click="ClearTmp()">
      <text class="setext_small">{{ $t("settings.clearTemp") }}</text>
    </div>
    <div class="setbase" @click="logout()">
      <text class="setext_small">{{ $t("settings.logOut") }}</text>
    </div>
    <div class="setbase" @click="GoDonation()">
      <text class="setext_small">{{ $t("settings.donation") }}</text>
    </div>
    <div class="setbase" @click="GoAbout()">
      <text class="setext_small">{{ $t("settings.about") }}</text>
    </div>
    <div class="setbase" @click="GoDebug()">
      <text class="setext_small">{{ $t("settings.debug") }}</text>
    </div>
    <image style="margin-top: 30px" src="/common/opensource_warning.png"></image>
    <text style="margin-top: 25px"></text>
  </div>
</template>

<script>
import router from "@system.router"
import prompt from "@system.prompt"
export default {
  private: {
    fresh_type: 3,
    home_vid_count: 10,
    enableFullAnimation: false,
    switchset_name: ["enable_full_anim"],
    countset_name: ["fresh_type", "home_vid_count"],
    countset: {
      fresh_type_max: 3,
      fresh_type_min: 1,
      home_vid_count_max: 14,
      home_vid_count_min: 1
    }
  },
  GoDonation(){
    router.push({
      uri: "pages/donation"
    })
  },
  GoAbout() {
    router.push({
      uri: "pages/about"
    })
  },
  GoDebug() {
    router.push({
      uri: "pages/componentstest"
    })
  },
  ClearTmp() {
    prompt.showToast({
      message: "当前不可用"
    })
  },
  SwitchSet(name) {
    switch (name) {
      case "enable_full_anim":
        if (this.enableFullAnimation) {
          this.enableFullAnimation = false
          this.$app.$def.settings.saveSettings({
            enableFullAnimation: this.enableFullAnimation
          })
        } else {
          this.enableFullAnimation = true
          this.$app.$def.settings.saveSettings({
            enableFullAnimation: this.enableFullAnimation
          })
          prompt.showToast({
            message: "开启此选项会导致首页等页面在低性能设备上严重卡顿，因此建议保持关闭！",
            duration: 6000
          })
        }
        this.UpdateNumView()
    }
  },
  ClickCountSet(name) {
    switch (name) {
      case "fresh_type":
        var new_fresh_type = null
        if (this.fresh_type < this.countset.fresh_type_max) {
          new_fresh_type = this.fresh_type + 1
        } else {
          new_fresh_type = this.countset.fresh_type_min
        }
        this.$app.$def.settings.saveSettings({
          fresh_type: new_fresh_type
        })
        setTimeout(() => {
          this.UpdateNumView()
        }, 100)
        break
      case "home_vid_count":
        var new_home_vid_count = null
        if (this.home_vid_count < this.countset.home_vid_count_max) {
          new_home_vid_count = this.home_vid_count + 1
        } else {
          new_home_vid_count = this.countset.home_vid_count_min
        }
        this.$app.$def.settings.saveSettings({
          home_vid_count: new_home_vid_count
        })
        setTimeout(() => {
          this.UpdateNumView()
        }, 100)
        break
    }
  },
  logout() {
    this.$app.$def.biliclient.logOut()
    router.clear()
    router.replace({
      uri: "pages/splash"
    })
  },
  UpdateNumView() {
    this.fresh_type = this.$app.$def.settings.SETTINGS.fresh_type
    this.home_vid_count = this.$app.$def.settings.SETTINGS.home_vid_count
    this.enableFullAnimation = this.$app.$def.settings.SETTINGS.enableFullAnimation
  },
  onInit() {
    this.UpdateNumView()
  }
}
</script>

<style>
.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  position: absolute;
  width: 100%;
}

.setbase {
  width: 328px;
  height: 112px;
  border-radius: 24px;
  background-color: #222222;
  align-items: center;
  flex-direction: row;
  margin-top: 8px;
}

.seticon {
  margin-left: 25px;
  width: 42px;
  height: 42px;
  object-fit: scale-down;
}

.setext_small {
  font-size: 36px;
  font-weight: 500;
  margin-left: 12px;
  width: 270px;
  color: white;
}

.setext {
  font-size: 30px;
  font-weight: 600;
  margin-left: 15px;
  color: white;
}

.countset_num {
  font-size: 32px;
  font-weight: 600;
  color: #4785ff;
}
</style>