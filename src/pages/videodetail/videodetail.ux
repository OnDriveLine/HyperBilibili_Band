<import name="title-bar" src="../../components/TitleBar/TitleBar.ux"></import>
<import name="full-screen-input" src="../../components/FullScreenInput/FullScreenInput.ux"></import>

<template>
  <div class="page">
    <scroll scroll-y="true" class="maindiv" bounces="true">
      <title-bar title="视频"></title-bar>
      <image src="{{vid.pic}}@319w_150h" alt="/common/grayloading_cn.png" class="vidpic"></image>
      <text class="vidtitle">{{ vid.title }}</text>
      <div class="statbar">
        <div class="stat">
          <image class="statimg" src="/common/playcounticon.png" style="width: 23px; height: 25px; margin-top: 2px">
          </image>
          <text class="statext">{{ this.$app.$def.tools.formatNumber(vid.stat.view) }}</text>
        </div>
        <div class="stat" style="margin-left: 10px">
          <image class="statimg" src="/common/uploadericon.png" style="width: 27px; height: 29px"></image>
          <text class="statext">{{ vid.owner.name }}</text>
        </div>
      </div>
      <scroll scroll-x="true" class="vidtoolbar" style="margin-top: 25px" bounces="true">
        <div class="vidtool" style="margin-left: 0px" @click="LikeClick()" @longpress="PowerIt()">
          <image class="vidtoolimg" src="{{likesrc}}"></image>
          <text class="vidtooltext">{{ this.$app.$def.tools.formatNumber(vid.stat.like) }}</text>
        </div>
        <div class="vidtool" @click="CoinClick()">
          <image class="vidtoolimg" src="{{coinsrc}}"></image>
          <text class="vidtooltext">{{ this.$app.$def.tools.formatNumber(vid.stat.coin) }}</text>
        </div>
        <div class="vidtool" @click="AddToFav()">
          <image class="vidtoolimg" src="{{starsrc}}"></image>
          <text class="vidtooltext">
            {{ this.$app.$def.tools.formatNumber(vid.stat.favorite) }}
          </text>
        </div>
        <div class="vidtool" @click="AISummary()">
          <image class="vidtoolimg" src="/common/vidtool_aisummary.png"></image>
          <text class="vidtooltext">视频总结</text>
        </div>
        <div class="vidtool" @click="WIPTips">
          <image class="vidtoolimg" src="/common/vidtool_generatemanifest.png"></image>
          <text class="vidtooltext">视频清单</text>
        </div>
        <div class="vidtool" @click="WIPTips">
          <image class="vidtoolimg" src="/common/vidtool_watchlater.png"></image>
          <text class="vidtooltext">稍后再看</text>
        </div>
        <div class="vidtool" @click="WIPTips">
          <image class="vidtoolimg" src="/common/vidtool_watchonphone.png"></image>
          <text class="vidtooltext">手机上看</text>
        </div>
      </scroll>
      <div class="featurebtn" style="margin-top: 20px" @click="Reply">
        <text class="featurebtn_text">发送评论</text>
      </div>
      <image src="/common/featurebtn_replyarea.png" style="margin-top: 15px" @click="GoReplyArea()"></image>
    </scroll>
    <full-screen-input style="position: absolute" input_text="{{input_text}}" if="{{replymode}}" @complete="InputComplete"
      @delete="InputDelete" @send="SendReply" @exit="ExitInput"></full-screen-input>
  </div>
</template>

<script>
import router from "@system.router"
import prompt from "@system.prompt"

export default {
  public: {
    bvid: 1 // 视频BVID
  },
  private: {
    vid: {},
    liked: false,
    coined: false,
    stared: false,
    likesrc: "/common/vidtool_like.png",
    coinsrc: "/common/vidtool_coin.png",
    starsrc: "/common/vidtool_star.png",
    replymode: false,
    input_text: {content: ""}
  },
  onInit() {
    this.GetVideoDetail()
    this.UpdateVideoToolbarStatus()
  },
  WIPTips(){
    prompt.showToast({
      message: "该功能仍在开发中"
    })
  },
  async GetVideoDetail() {
    this.vid = await this.$app.$def.biliclient.getVideoInfoByBVID(this.bvid)
  },
  async UpdateVideoToolbarStatus() {
    this.stared = await this.$app.$def.biliclient.isVideoStaredByBVID(this.bvid)
    this.liked = await this.$app.$def.biliclient.isVideoLikedByBVID(this.bvid)
    this.coined = await this.$app.$def.biliclient.isVideoCoinedByBVID(this.bvid)
    this.UpdateToolBarIconSrc()
  },
  UpdateToolBarIconSrc() {
    this.likesrc = this.liked ? "/common/vidtool_liked.png" : "/common/vidtool_like.png"
    this.coinsrc = this.coined ? "/common/vidtool_coined.png" : "/common/vidtool_coin.png"
    this.starsrc = this.stared ? "/common/vidtool_stared.png" : "/common/vidtool_star.png"
  },
  async PowerIt(){
    prompt.showToast({message: "一键三连中！"})
    this.LikeClick()
    this.CoinClick()
    this.AddToFav()
  },
  async LikeClick() {
    var result = await this.$app.$def.biliclient.LikeVideo(this.vid.bvid, 1)
    const message =
      result.code === 0 ? "点赞成功" : `点赞失败，错误代码：${result.code} 原因：${result.message}`
    prompt.showToast({
      message,
      duration: result.code === 0 ? 2000 : 4000
    })
    this.UpdateVideoToolbarStatus()
  },
  async CoinClick() {
    var result = await this.$app.$def.biliclient.CoinVideo(this.vid.bvid, 1)
    const message =
      result.code === 0 ? "投币成功" : `投币失败，错误代码：${result.code} 原因：${result.message}`
    prompt.showToast({
      message,
      duration: result.code === 0 ? 2000 : 4000
    })
    this.UpdateVideoToolbarStatus()
  },
  async SendReply() {
    this.replymode = false
    if (this.input_text.content.length === 0) {
      return prompt.showToast({
        message: "评论内容不得为空！",
        duration: 2000
      })
    }

    const result = await this.$app.$def.biliclient.GiveReply(
      1,
      this.vid.aid,
      this.input_text.content
    )
    const message =
      result.code === 0 ? "发送成功" : `发送失败，错误代码：${result.code} 原因：${result.message}`
    prompt.showToast({
      message,
      duration: result.code === 0 ? 2000 : 4000
    })
  },
  ExitInput() {
    this.replymode = false
  },
  InputComplete(evt) {
    this.input_text.content += evt.detail.content
  },
  InputDelete() {
    this.input_text.content = this.input_text.content.slice(0, -1)
  },
  Reply() {
    this.replymode = true
    this.input_text.content = ""
  },
  DisabledFeaturesWarning() {
    prompt.showToast({
      message: "由于B站风控，该功能暂不可用"
    })
  },
  async AISummary() {
    const summary =
      (await this.$app.$def.biliclient.getVideoAISummaryByBVID(
        this.vid.bvid,
        this.vid.cid,
        this.vid.owner.mid
      )) || "该视频没有摘要，可能是其内容中包含敏感信息或没有可识别的音频"
    router.push({
      uri: "pages/textdetail",
      params: {text: summary}
    })
  },
  async AddToFav() {
    const result = await this.$app.$def.biliclient.starVideoToDefaultFavFolderByBVID(this.bvid)
    const message = result ? "收藏失败，请重试，或重新登录后再试" : "收藏成功"
    prompt.showToast({message})
    this.UpdateVideoToolbarStatus()
  },
  GoReplyArea() {
    router.push({
      uri: "pages/replys",
      params: {
        type: 1,
        oid: this.vid.aid,
        replycount: this.vid.stat.reply
      }
    })
  }
}
</script>

<style>
.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  position: absolute;
  width: 100%;
}

.maindiv {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  height: 100%;
}

.vidpic {
  border-radius: 20px;
  width: 320px;
  height: 150px;
  margin-top: 31px;
}

.vidtitle {
  font-size: 20px;
  font-weight: 600;
  color: #9e9e9e;
  margin-top: 10px;
  width: 281px;
}

.statbar {
  flex-direction: row;
  align-items: center;
  margin-top: 10px;
  width: 281px;
}

.stat {
  flex-direction: row;
  align-items: center;
}

.statimg {
  width: 20px;
  height: 15px;
  object-fit: scale-down;
}

.statext {
  font-size: 20px;
  font-weight: 600;
  color: #9e9e9e;
  margin-left: 5px;
}

.vidtoolbar {
  flex-direction: row;
  width: 374px;
}

.vidtool {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-left: 15px;
  width: 85px;
}

.vidtooltext {
  margin-top: 10px;
  font-size: 20px;
  font-weight: 600;
}

.vidtoolimg {
  width: 62px;
}

.featurebtn {
  width: 322px;
  height: 81px;
  border-radius: 90px;
  background-color: #262626;
  justify-content: center;
  align-items: center;
}

.featurebtn_text {
  font-size: 40px;
  font-weight: 600;
}
</style>