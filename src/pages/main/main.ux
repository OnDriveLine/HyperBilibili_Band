<import name="switch-bar" src="../../components/SwitchBar/SwitchBar.ux"></import>
<import name="videoshow" src="../../components/Video/Video.ux"></import>

<template>
  <div class="page">
    <image src="/common/rounddevices_bg.png"
      style="position: absolute; transform: rotate({{ambientlight.rotatedeg}}); transform-origin: {{ambientlight.transform_origin}}; left: 0px">
    </image>
    <scroll scroll-y="true" class="scroll" bounces="true">
      <switch-bar title="main.title"></switch-bar>
      <text class="tip">{{ funnytip }}</text>
      <image style="position: absolute; margin-top: 265px" if="{{show_loading}}" src="{{anims.loading_src.value}}">
      </image>
      <div class="recommend_div" if="{{show_recommend_div}}">
        <list class="recommend_list">
          <list-item type="recommend_videos" for="{{recommend_vids}}" class="recommend_listitem"
            style="height: {{calcSpace($item.title, true)}}" onclick="OpenVideo({{$item.bvid}})">
            <videoshow video="{{$item}}"></videoshow>
            <text style="margin-top: {{calcSpace($item.title, false)}}; height: 0px"></text>
          </list-item>
        </list>
      </div>
    </scroll>
    <div style="position: absolute; bottom: 0px" @click="Refresh()">
      <image src="/common/main_floatingrefresh.png"></image>
    </div>
    <text style="position: absolute; color: rgba(0, 0, 0, 0); width: 0px; top: 50px">
      {{ anims.refresh_bottom.value }}
    </text>
    <text style="position: absolute; color: rgba(0, 0, 0, 0); width: 0px; top: 50px">
      {{ ambientlight.rotatedeg }}
    </text>
    <image if="{{anims.showRefreshFX}}" style="position: absolute; bottom: {{anims.refresh_bottom.value}}px"
      src="/common/TranslateFX/refreshFX.png"></image>
  </div>
</template>

<script>
import router from "@system.router"
import prompt from "@system.prompt"

export default {
  private: {
    recommend_vids: [],
    show_loading: true,
    show_recommend_div: false,
    funnytip: "",
    anims: {
      loading: null,
      loading_src: {value: "/common/seqanims/loadingWhite/icons8-loading_颜色反转-1.png"},
      refresh: null,
      showRefreshFX: false,
      refresh_bottom: {value: "-350"}
    },
    ambientlight: {
      transform_origin: "0px 0px",
      rotatedeg: "0deg"
    },
    ambientlightObj: null
  },
  OpenVideo(bvid) {
    console.log("openvid:", bvid)
    router.push({
      uri: "pages/videodetail",
      params: {bvid}
    })
  },
  async Refresh() {
    if (!this.anims.showRefreshFX) {
      this.recommend_vids = []
      this.show_loading = true
      this.show_recommend_div = false
      this.anims.showRefreshFX = true

      this.anims.loading.start()

      setTimeout(() => this.anims.refresh.start(), 200)

      setTimeout(async () => {
        this.anims.refresh_bottom.value = "-350px"
        this.anims.refresh.stop()
        this.anims.showRefreshFX = false
        await this.GetVids()
      }, 1200)
    } else {
      prompt.showToast({message: "你先别急。"})
    }
  },
  async GetVids() {
    try {
      const {fresh_type, home_vid_count} = this.$app.$def.settings.SETTINGS
      this.recommend_vids = await this.$app.$def.biliclient.getMainPageRecommendVideos(
        fresh_type,
        home_vid_count
      )
    } catch (error) {
      console.error("获取推荐视频时出错:", error)
      prompt.showToast({message: "获取推荐视频失败，请重试。"})
    } finally {
      this.anims.loading.stop()
      this.show_loading = false
      this.show_recommend_div = true
    }
  },
  calcSpace(vid_title, isListItem) {
    const isLastItem = vid_title === this.recommend_vids[this.recommend_vids.length - 1]?.title
    if (isListItem) {
      return isLastItem ? "270px" : "170px"
    }
    return isLastItem ? "80px" : "0px"
  },
  async checkUpdates() {
    try {
      const result = await this.$app.$def.biliclient.checkHyperbilibiliUpdates()
      if (result.update) {
        prompt.showToast({message: result.msg, duration: 6000})
      }
    } catch (error) {
      console.error("检查更新时出错:", error)
    }
  },
  onInit() {
    this.GetVids()
    this.funnytip = this.$app.$def.funnytips.getTips()
    this.checkUpdates()
  },
  onReady() {
    const {loading_src, refresh_bottom} = this.anims

    this.anims.loading = new this.$app.$def.animengine.SequenceAnim(
      "mainPage",
      loading_src,
      28,
      "/common/seqanims/loadingWhite/icons8-loading_颜色反转-*.png",
      1000,
      true
    )
    this.anims.loading.start()

    this.anims.refresh = new this.$app.$def.animengine.DomAnim(
      "mainPage",
      {value: "0px"},
      refresh_bottom,
      0,
      450,
      1000
    )

    this.ambientlightObj = new this.$app.$def.ambientlight.AmbientLightRunner(
      this.ambientlight,
      this.$app.$def.settings.SETTINGS
    )
    this.ambientlightObj.start()
  },
  onDestroy() {
    this.$app.$def.animengine.clearPageAnims("mainPage")
    this.ambientlightObj?.stop()
  }
}
</script>

<style>
.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  position: absolute;
  width: 100%;
}

.scroll {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  width: 100%;
}

.tip {
  margin-top: 10px;
  font-size: 20px;
  font-weight: 600;
}

.recommend_div {
  margin-top: 15px;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  width: 100%;
}

.recommend_list {
  width: 77%;
  height: 100%;
}

.recommend_listitem {
  height: 170px;
  width: 100%;
  margin-top: 5px;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
}
</style>